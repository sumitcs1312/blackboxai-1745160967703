AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function with API Gateway for AI Quiz Generator

Parameters:
  OpenAIAPIKey:
    Type: String
    NoEcho: true
    Description: OpenAI API Key for accessing the OpenAI service

Resources:
  QuizGeneratorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: AIQuizGeneratorFunction
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          // Lambda function code is not included here. Please upload your code package separately.
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIAPIKey
      Timeout: 10

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AIQuizGeneratorLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  QuizApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: AIQuizGeneratorAPI
      ProtocolType: HTTP

  QuizApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref QuizApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${QuizGeneratorFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  QuizApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref QuizApi
      RouteKey: POST /generate-quiz
      Target: !Sub integrations/${QuizApiIntegration}

  QuizApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref QuizApi
      AutoDeploy: true
      StageName: prod

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref QuizGeneratorFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${QuizApi}/*/*/*

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${QuizApi}.execute-api.${AWS::Region}.amazonaws.com/prod/generate-quiz"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AIQuizGeneratorLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
